Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\n    <string name=\"app_name\">FurEver</string>\n    <string name=\"title_activity_login\">LoginActivity</string>\n    <string name=\"prompt_email\">Email</string>\n    <string name=\"prompt_password\">Password</string>\n    <string name=\"action_sign_in\">Sign in or register</string>\n    <string name=\"action_sign_in_short\">Sign in</string>\n    <string name=\"welcome\">\"Welcome !\"</string>\n    <string name=\"invalid_username\">Not a valid username</string>\n    <string name=\"invalid_password\">Password must be >5 characters</string>\n    <string name=\"login_failed\">\"Login failed\"</string>\n    <string name=\"login\">Login</string>\n    <string name=\"email\">Email</string>\n    <string name=\"Password\">Password</string>\n    <string name=\"log_in\">Log in</string>\n    <string name=\"register\">Register</string>\n    <string name=\"click_to_login\">Click to login</string>\n    <string name=\"click_to_register\">Click to register</string>\n    <string name=\"user_details\">User details</string>\n    <string name=\"log_out\">Log out</string>\n    <string name=\"next_question\">Next Question</string>\n    <string name=\"finish\">finish</string>\n    <string name=\"prev_question\">Prev Question</string>\n    <string name=\"submit\">Submit</string>\n    <string name=\"match_1\">Match 1</string>\n    <string name=\"match_2\">Match 2</string>\n    <string name=\"match_3\">Match 3</string>\n    <string name=\"selected_dog_image\">Selected Dog Image</string>\n\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision 2fd5ca670f4a34d978eeba046c7899bf7f53909e)
+++ b/app/src/main/res/values/strings.xml	(date 1745022847947)
@@ -26,5 +26,8 @@
     <string name="match_2">Match 2</string>
     <string name="match_3">Match 3</string>
     <string name="selected_dog_image">Selected Dog Image</string>
+    <!-- Add Google Maps API Key -->
+    <string name="google_maps_api_key">API Key</string>
+
 
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/furever/PostsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.furever;\n\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport androidx.annotation.NonNull;\nimport androidx.annotation.Nullable;\nimport androidx.fragment.app.Fragment;\n\npublic class PostsFragment extends Fragment {\n\n    @Nullable\n    @Override\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        return inflater.inflate(R.layout.fragment_posts, container, false);\n    }\n} 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/furever/PostsFragment.java b/app/src/main/java/com/example/furever/PostsFragment.java
--- a/app/src/main/java/com/example/furever/PostsFragment.java	(revision 2fd5ca670f4a34d978eeba046c7899bf7f53909e)
+++ b/app/src/main/java/com/example/furever/PostsFragment.java	(date 1745022820533)
@@ -1,19 +1,277 @@
 package com.example.furever;
 
+import android.content.Context;
+import android.content.Intent;
 import android.os.Bundle;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.AutoCompleteTextView;
+import android.widget.ProgressBar;
+import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
+
+import com.google.android.material.floatingactionbutton.FloatingActionButton;
+import com.google.firebase.firestore.FirebaseFirestore;
+import com.google.firebase.firestore.Query;
+import com.google.firebase.firestore.QueryDocumentSnapshot;
 
-public class PostsFragment extends Fragment {
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Date;
+import java.util.List;
+import java.util.Set;
+import java.util.TreeSet;
 
-    @Nullable
+public class PostsFragment extends Fragment implements PostAdapter.OnPostClickListener {
+    private static final String TAG = "PostsFragment";
+
+    private RecyclerView recyclerView;
+    private PostAdapter adapter;
+    private ProgressBar progressBar;
+    private SwipeRefreshLayout swipeRefresh;
+    private FloatingActionButton fabAddPost;
+
+    private AutoCompleteTextView regionInput;
+    private ArrayAdapter<String> regionAdapter;
+    private List<Post> allPosts = new ArrayList<>();
+
+    private FirebaseFirestore db;
+
     @Override
-    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+    public View onCreateView(@NonNull LayoutInflater inflater,
+                             ViewGroup container,
+                             Bundle savedInstanceState) {
         return inflater.inflate(R.layout.fragment_posts, container, false);
     }
-} 
\ No newline at end of file
+
+    @Override
+    public void onViewCreated(@NonNull View view,
+                              @Nullable Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        // Initialize Firestore
+        db = FirebaseFirestore.getInstance();
+
+        // Reference UI elements
+        recyclerView  = view.findViewById(R.id.recyclerView);
+        progressBar   = view.findViewById(R.id.progressBar);
+        swipeRefresh  = view.findViewById(R.id.swipeRefresh);
+        fabAddPost    = view.findViewById(R.id.fabAddPost);
+        regionInput   = view.findViewById(R.id.regionInput);
+
+        // Set up RecyclerView and its adapter
+        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
+        adapter = new PostAdapter(this);
+        recyclerView.setAdapter(adapter);
+
+        // Set up dropdown suggestions adapter (initially empty)
+        regionAdapter = new ArrayAdapter<>(
+                requireContext(),
+                android.R.layout.simple_dropdown_item_1line,
+                new ArrayList<>()
+        );
+        regionInput.setAdapter(regionAdapter);
+
+        // Listen for text changes to filter posts
+        regionInput.addTextChangedListener(new TextWatcher() {
+            @Override public void beforeTextChanged(CharSequence s, int start, int count, int after) {}
+            @Override public void onTextChanged(CharSequence s, int start, int before, int count) {}
+            @Override
+            public void afterTextChanged(Editable s) {
+                filterByRegion(s.toString());
+            }
+        });
+
+        // Pull-to-refresh
+        swipeRefresh.setOnRefreshListener(this::loadPosts);
+
+        // Floating action button to create a new post
+        fabAddPost.setOnClickListener(v ->
+                startActivity(new Intent(getContext(), CreatePostActivity.class))
+        );
+
+        // Load posts initially
+        loadPosts();
+    }
+
+    private void loadPosts() {
+        Context context = getContext();
+        if (context == null) return;
+
+        progressBar.setVisibility(View.VISIBLE);
+
+        db.collection("posts")
+                .orderBy("timestamp", Query.Direction.DESCENDING)
+                .get()
+                .addOnSuccessListener(snapshot -> {
+                    if (!isAdded()) return;
+
+                    allPosts.clear();
+                    for (QueryDocumentSnapshot doc : snapshot) {
+                        Post post = doc.toObject(Post.class);
+                        post.setId(doc.getId());
+                        allPosts.add(post);
+                    }
+
+                    // Append sample posts
+                    allPosts.addAll(getSamplePosts());
+
+                    // Display all posts
+                    adapter.setPosts(new ArrayList<>(allPosts));
+                    swipeRefresh.setRefreshing(false);
+                    progressBar.setVisibility(View.GONE);
+
+                    // Update region dropdown suggestions
+                    updateRegionSuggestions();
+                })
+                .addOnFailureListener(e -> {
+                    Log.e(TAG, "Error loading posts", e);
+                    Toast.makeText(context,
+                            "Error loading posts: " + e.getMessage(),
+                            Toast.LENGTH_SHORT).show();
+                    swipeRefresh.setRefreshing(false);
+                    progressBar.setVisibility(View.GONE);
+                });
+    }
+
+
+    private void updateRegionSuggestions() {
+        Set<String> regionsSet = new TreeSet<>();
+        for (Post p : allPosts) {
+            String fullAddress = p.getAddress();
+            if (fullAddress != null && !fullAddress.isEmpty()) {
+                regionsSet.add(extractRegion(fullAddress));
+            }
+        }
+
+        List<String> regions = new ArrayList<>(regionsSet);
+        regions.add(0, "All Regions");
+
+        regionAdapter.clear();
+        regionAdapter.addAll(regions);
+        regionAdapter.notifyDataSetChanged();
+    }
+
+
+    private String extractRegion(String fullAddress) {
+        String[] parts = fullAddress.split(",");
+        if (parts.length < 2) {
+            return fullAddress.trim();
+        }
+        String city = parts[1].trim();
+        String statePart = parts.length >= 3 ? parts[2].trim() : "";
+        String state = statePart.split("\\s+")[0];
+        return city + ", " + state;
+    }
+
+
+    private void filterByRegion(String region) {
+        // Check if fragment is attached to activity
+        if (region == null
+                || region.isEmpty()
+                || "All Regions".equalsIgnoreCase(region)) {
+            adapter.setPosts(new ArrayList<>(allPosts));
+        } else {
+            List<Post> filtered = new ArrayList<>();
+            for (Post p : allPosts) {
+                String regionOfPost = extractRegion(p.getAddress() != null ? p.getAddress() : "");
+                if (regionOfPost.toLowerCase().contains(region.toLowerCase())) {
+                    filtered.add(p);
+                }
+            }
+            adapter.setPosts(filtered);
+        }
+    }
+
+    private List<Post> getSamplePosts() {
+        List<Post> samples = Arrays.asList(
+                new Post("sample_user_1", "Sarah Johnson", "Golden Retriever",
+                        "Female", "Young (1-3 years)",
+                        "Looking for a loving home for Luna...",
+                        "123 Main St, Boston, MA 02115", 42.3601, -71.0589),
+                new Post("sample_user_2", "Mike Wilson", "German Shepherd",
+                        "Male", "Puppy (0-1 year)",
+                        "Max is a 6‑month‑old German Shepherd...",
+                        "456 Park Ave, New York, NY 10022", 40.7128, -74.0060),
+                new Post("sample_user_3", "Emily Chen", "French Bulldog",
+                        "Male", "Adult (3-7 years)",
+                        "Meet Charlie, a calm and affectionate Frenchie...",
+                        "789 Ocean Blvd, Miami, FL 33139", 25.7617, -80.1918),
+                new Post("sample_user_4", "David Brown", "Labrador Retriever",
+                        "Female", "Senior (7+ years)",
+                        "Sweet senior Lab named Bella...",
+                        "321 Highland Dr, Seattle, WA 98101", 47.6062, -122.3321),
+                new Post("sample_user_5", "Lisa Martinez", "Border Collie",
+                        "Male", "Young (1-3 years)",
+                        "Cooper is a highly intelligent Border Collie...",
+                        "555 River Rd, Chicago, IL 60601", 41.8781, -87.6298)
+        );
+
+        for (int i = 0; i < samples.size(); i++) {
+            Post p = samples.get(i);
+            p.setId("sample_post_" + (i + 1));
+            p.setTimestamp(new Date(System.currentTimeMillis() - i * 86400000L));
+        }
+        return samples;
+    }
+
+    @Override
+    public void onPostClick(Post post) {
+        Context context = getContext();
+        if (context != null && post != null) {
+            Intent intent = new Intent(context, PostDetailActivity.class);
+            intent.putExtra(PostDetailActivity.EXTRA_POST_ID, post.getId());
+            intent.putExtra("IS_SAMPLE_POST", post.getId().startsWith("sample_post_"));
+            startActivity(intent);
+        }
+    }
+
+    @Override
+    public void onUserImageClick(String userId, String userName) {
+        if (userId == null || userId.isEmpty() || userId.startsWith("sample_user_")) {
+            String fakeEmail = userName.toLowerCase().replace(" ", ".") + "@example.com";
+            showUserEmailDialog(userName, fakeEmail);
+            return;
+        }
+
+        Toast.makeText(getContext(),
+                "Loading contact information...", Toast.LENGTH_SHORT).show();
+
+        db.collection("users")
+                .document(userId)
+                .get()
+                .addOnSuccessListener(doc -> {
+                    User user = doc.toObject(User.class);
+                    String email = (user != null && user.getEmail() != null)
+                            ? user.getEmail()
+                            : userId + "@example.com";
+                    showUserEmailDialog(userName, email);
+                })
+                .addOnFailureListener(e -> {
+                    Log.e(TAG, "Error fetching user data", e);
+                    showUserEmailDialog(userName, userId + "@example.com");
+                });
+    }
+
+    private void showUserEmailDialog(String userName, String email) {
+        Context context = getContext();
+        if (context != null) {
+            new androidx.appcompat.app.AlertDialog.Builder(context)
+                    .setTitle(userName + "'s Contact")
+                    .setMessage("Email: " + email)
+                    .setPositiveButton("OK", null)
+                    .show();
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_posts.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <TextView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Posts Page\"\n        android:textSize=\"20sp\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" />\n\n</androidx.constraintlayout.widget.ConstraintLayout> 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_posts.xml b/app/src/main/res/layout/fragment_posts.xml
--- a/app/src/main/res/layout/fragment_posts.xml	(revision 2fd5ca670f4a34d978eeba046c7899bf7f53909e)
+++ b/app/src/main/res/layout/fragment_posts.xml	(date 1745022847255)
@@ -1,18 +1,51 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout
+<androidx.coordinatorlayout.widget.CoordinatorLayout
     xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <TextView
+    <!-- 1. Top: region input / dropdown -->
+    <com.google.android.material.textfield.TextInputLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:hint="Enter or select region"
+        app:boxStrokeColor="@android:color/darker_gray">
+
+        <AutoCompleteTextView
+            android:id="@+id/regionInput"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:inputType="text" />
+    </com.google.android.material.textfield.TextInputLayout>
+
+    <!-- 2. Main list area: SwipeRefreshLayout + RecyclerView -->
+    <androidx.swiperefreshlayout.widget.SwipeRefreshLayout
+        android:id="@+id/swipeRefresh"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_marginTop="56dp">  <!-- leave space for regionInput -->
+
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/recyclerView"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent" />
+
+    </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>
+
+    <!-- 3. Floating action button (unchanged) -->
+    <com.google.android.material.floatingactionbutton.FloatingActionButton
+        android:id="@+id/fabAddPost"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="Posts Page"
-        android:textSize="20sp"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
+        app:layout_anchor="@id/recyclerView"
+        app:layout_anchorGravity="bottom|end"
+        app:srcCompat="@android:drawable/ic_input_add" />
+
+    <!-- 4. Progress indicator -->
+    <ProgressBar
+        android:id="@+id/progressBar"
+        android:layout_width="48dp"
+        android:layout_height="48dp"
+        android:layout_gravity="center" />
 
-</androidx.constraintlayout.widget.ConstraintLayout> 
\ No newline at end of file
+</androidx.coordinatorlayout.widget.CoordinatorLayout>
\ No newline at end of file
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"deploymentTargetSelector\">\n    <selectionStates>\n      <SelectionState runConfigName=\"app\">\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\n      </SelectionState>\n    </selectionStates>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision 2fd5ca670f4a34d978eeba046c7899bf7f53909e)
+++ b/.idea/deploymentTargetSelector.xml	(date 1745022663864)
@@ -4,6 +4,14 @@
     <selectionStates>
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
+        <DropdownSelection timestamp="2025-04-18T23:38:04.740974Z">
+          <Target type="DEFAULT_BOOT">
+            <handle>
+              <DeviceId pluginId="LocalEmulator" identifier="path=/Users/yunengli/.android/avd/Pixel_9_Pro_XL_API_35.avd" />
+            </handle>
+          </Target>
+        </DropdownSelection>
+        <DialogSelection />
       </SelectionState>
     </selectionStates>
   </component>
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\">\n\n    <uses-permission android:name=\"android.permission.INTERNET\"></uses-permission>\n\n    <application\n        android:allowBackup=\"true\"\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\n        android:fullBackupContent=\"@xml/backup_rules\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.Material3.Light\"\n        tools:targetApi=\"31\">\n        <activity\n            android:name=\".SplashActivity\"\n            android:theme=\"@style/Theme.FurEver.Splash\"\n            android:exported=\"true\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n\n        <activity\n            android:name=\".RegisterActivity\"\n            android:theme=\"@style/Theme.Material3.Light.NoActionBar\"\n            android:exported=\"false\" />\n        <activity\n            android:name=\".LoginActivity\"\n            android:theme=\"@style/Theme.Material3.Light.NoActionBar\"\n            android:exported=\"true\">\n<!--            <intent-filter>-->\n<!--                <action android:name=\"android.intent.action.MAIN\" />-->\n\n<!--                <category android:name=\"android.intent.category.LAUNCHER\" />-->\n<!--            </intent-filter>-->\n        </activity>\n\n        <activity\n            android:name=\".MainActivity\"\n            android:exported=\"true\">\n<!--            <intent-filter>-->\n<!--                <action android:name=\"android.intent.action.MAIN\" />-->\n\n<!--                <category android:name=\"android.intent.category.LAUNCHER\" />-->\n<!--            </intent-filter>-->\n        </activity>\n        <activity android:name=\".ResultsActivity\"\n            android:exported=\"false\" />\n\n        <activity\n            android:name=\".DogDetailActivity\"\n            android:exported=\"false\"\n            android:parentActivityName=\".ResultsActivity\">\n            <meta-data\n                android:name=\"android.support.PARENT_ACTIVITY\"\n                android:value=\".ResultsActivity\" />\n        </activity>\n\n        <activity android:name=\".PreviewActivity\" android:exported=\"false\" />\n\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 2fd5ca670f4a34d978eeba046c7899bf7f53909e)
+++ b/app/src/main/AndroidManifest.xml	(date 1745022663864)
@@ -4,6 +4,7 @@
 
     <uses-permission android:name="android.permission.INTERNET"></uses-permission>
 
+
     <application
         android:allowBackup="true"
         android:dataExtractionRules="@xml/data_extraction_rules"
@@ -60,6 +61,8 @@
                 android:value=".ResultsActivity" />
         </activity>
 
+
+
         <activity android:name=".PreviewActivity" android:exported="false" />
 
     </application>
